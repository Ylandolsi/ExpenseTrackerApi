// <auto-generated />
using System;
using ExpenseTrackerApi.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExpenseTrackerApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250124101815_CreateDataBase")]
    partial class CreateDataBase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Models.Entities.AuthUser", b =>
                {
                    b.Property<int>("userId")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("hashedPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("AuthUsers");
                });

            modelBuilder.Entity("Models.Entities.Expense", b =>
                {
                    b.Property<int>("expenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("expenseId"));

                    b.Property<string>("expenseCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("expenseDate")
                        .HasColumnType("date");

                    b.Property<string>("expenseDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("expensePrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("userProfilesId")
                        .HasColumnType("int");

                    b.HasKey("expenseId");

                    b.HasIndex("userProfilesId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Models.Entities.UserProfile", b =>
                {
                    b.Property<int>("userId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userId");

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("Models.Entities.AuthUser", b =>
                {
                    b.HasOne("Models.Entities.UserProfile", "UserProfile")
                        .WithOne("AuthUser")
                        .HasForeignKey("Models.Entities.AuthUser", "userId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Models.Entities.Expense", b =>
                {
                    b.HasOne("Models.Entities.UserProfile", "UserProfile")
                        .WithMany("UserExpenses")
                        .HasForeignKey("userProfilesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("Models.Entities.UserProfile", b =>
                {
                    b.Navigation("AuthUser")
                        .IsRequired();

                    b.Navigation("UserExpenses");
                });
#pragma warning restore 612, 618
        }
    }
}
